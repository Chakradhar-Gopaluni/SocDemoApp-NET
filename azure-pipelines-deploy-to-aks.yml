trigger:
- none

variables:
  vmImageName: 'ubuntu-latest'
  azureResourceGroup: "azarch-course1"
  azureSubscriptionConnection: 'Azure Pass - Sponsorship'
  dockerRegistryServiceConnection: 'DockerRegistryConnection2'
  kubernetesServiceConnection: 'KubernetesServiceConnection3'
  dockerfilePath: 'HelloWorldApp.Web/Dockerfile'
  containerRegistryName: dssdemoregnov
  imageRepository: 'helloworldapp'
  tag: $(Build.BuildId)
  secretName: 'kubernetes-principle-secret'   
  kubernetesClusterName: 'dssaksclusternov'
  ImageName: '$(containerRegistryName).azurecr.io/$(imageRepository):$(tag)'

stages:
- stage: Build
  displayName: Build Images and Push to Container Registry
  jobs:  
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:

    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        containerRegistry: '$(dockerRegistryServiceConnection)'
        repository: '$(imageRepository)'
        command: 'buildAndPush'
        Dockerfile: '**/Dockerfile'
        buildContext: '.'
        tags: '$(tag)'

    - task: replacetokens@4
      inputs:
        targetFiles: '**/deployment.yml'
        encoding: 'auto'
        tokenPattern: 'default'
        writeBOM: true
        actionOnMissing: 'warn'
        keepToken: false
        actionOnNoFiles: 'continue'
        enableTransforms: false
        useLegacyPattern: false
        enableTelemetry: true

    - task: CopyFiles@2
      inputs:
        SourceFolder: 'manifests'
        Contents: '*.yml'
        TargetFolder: '$(build.artifactstagingdirectory)'
        
    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: '$(build.artifactstagingdirectory)'
        artifact: 'drop'
        publishLocation: 'pipeline'

- stage: DeployToAKSCluster
  displayName: Deploy To AKS Cluster
  dependsOn: Build
  jobs:
  - deployment: Deploy
    displayName: Deploy job
    pool:
      vmImage: $(vmImageName)
    environment: 'deccansoft'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: DownloadPipelineArtifact@2
            inputs:
              artifactName: 'drop'
              downloadPath: '$(System.ArtifactsDirectory)'

          - task: Kubernetes@1
            displayName: kubectl apply using configFile
            inputs:
              connectionType: 'Azure Resource Manager'
              azureSubscriptionEndpoint: $(azureSubscriptionConnection)
              azureResourceGroup: $(azureResourceGroup)
              kubernetesCluster: $(kubernetesClusterName)
              command: 'apply'
              useConfigurationFile: true
              configuration: '$(System.ArtifactsDirectory)/deployment.yml'
              secretType: 'dockerRegistry'
              containerRegistryType: 'Azure Container Registry'
              azureSubscriptionEndpointForSecrets: $(azureSubscriptionConnection)
              azureContainerRegistry: $(containerRegistryName).azurecr.io
              secretName: $(secretName)

          - task: Kubernetes@1
            displayName: kubectl apply using configFile
            inputs:
              connectionType: 'Azure Resource Manager'
              azureSubscriptionEndpoint: $(azureSubscriptionConnection)
              azureResourceGroup: $(azureResourceGroup)
              kubernetesCluster: $(kubernetesClusterName)
              command: 'apply'
              useConfigurationFile: true
              configuration: '$(System.ArtifactsDirectory)/service.yml'
              secretType: 'dockerRegistry'
              containerRegistryType: 'Azure Container Registry'
              azureContainerRegistry: $(containerRegistryName).azurecr.io